<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiktok.task.mapper.TkUsersMapper">
    
    <resultMap type="TkUsers" id="TkUsersResult">
        <result property="uid"    column="uid"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="nickname"    column="nickname"    />
        <result property="svipLevel"    column="svip_level"    />
        <result property="balance"    column="balance"    />
        <result property="nonWithdrawableBalance"    column="non_withdrawable_balance"    />
        <result property="usdtAddress"    column="usdt_address"    />
        <result property="registrationTime"    column="registration_time"    />
        <result property="totareward"    column="totareward"    />
        <result property="invitationCode"    column="invitation_code"    />
        <result property="referrerId"    column="referrer_id"    />
        <result property="userStatus"    column="user_status"    />
        <result property="withdraw"    column="withdraw"    />
        <result property="paymentPassword"    column="payment_password"    />
        <result property="blockchainName"    column="blockchain_name"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="logindate"    column="last_login_date"    />
        <result property="deleted"    column="deleted"    />
        <result property="frozenIvestmentAmount"    column="frozen_investment_amount"    />
        <result property="investmentAmount"    column="investment_amount"    />

    </resultMap>

    <sql id="selectTkUsersVo">
        SELECT tk.uid, tk.username, tk.password, tk.nickname, tk.svip_level, tk.totareward, tk.balance, tk.non_withdrawable_balance, tk.usdt_address, tk.registration_time, tk.avatar, tk.invitation_code, tk.referrer_id, tk.user_status, tk.withdraw, tk.payment_password, tk.blockchain_name, tk.create_by, tk.create_time, tk.update_by, tk.update_time, tk.remark, tk.deleted, tk.frozen_investment_amount, tk.investment_amount,
               (SELECT MAX(login_date) FROM sys_user WHERE user_name = tk.username) AS last_login_date
        FROM tk_users AS tk
    </sql>

    <select id="selectTkUsersList" parameterType="TkUsers" resultMap="TkUsersResult">
        <include refid="selectTkUsersVo"/>
        <where>
            AND tk.deleted!=1

            <if test="uid != null  and uid != ''"> and uid= #{uid}</if>
            <if test="username != null  and username != ''"> and username= #{username}</if>
            <if test="nickname != null  and nickname != ''"> and nickname= #{nickname}</if>
            <if test="svipLevel != null "> and tk.svip_level = #{svipLevel}</if>
            <if test="invitationCode != null "> and tk.invitation_code = #{invitationCode}</if>
            <if test="params.beginRegistrationTime != null and params.beginRegistrationTime != '' and params.endRegistrationTime != null and params.endRegistrationTime != ''"> and tk.registration_time between #{params.beginRegistrationTime} and #{params.endRegistrationTime}</if>
            <if test="referrerId != null "> and tk.referrer_id = #{referrerId}</if>
            <if test="createBy != null "> and tk.create_by = #{createBy}</if>
            ORDER BY uid DESC
        </where>

    </select>

    <select id="selectTkUsersBlurList" parameterType="TkUsers" resultMap="TkUsersResult">
        <include refid="selectTkUsersVo"/>
        <where>
            <if test="uid != null  and uid != ''"> and uid = #{uid}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="nickname != null  and nickname != ''"> and nickname = #{nickname}</if>
            <if test="svipLevel != null "> and tk.svip_level = #{svipLevel}</if>
            <if test="invitationCode != null "> and tk.invitation_code = #{invitationCode}</if>
            <if test="params.beginRegistrationTime != null and params.beginRegistrationTime != '' and params.endRegistrationTime != null and params.endRegistrationTime != ''"> and tk.registration_time between #{params.beginRegistrationTime} and #{params.endRegistrationTime}</if>
            <if test="referrerId != null "> and tk.referrer_id = #{referrerId}</if>
            <if test="createBy != null "> and tk.create_by = #{createBy}</if>
        </where>
        AND tk.deleted != 1
        ORDER BY uid DESC
    </select>

    
    <select id="selectTkUsersByUid" parameterType="Long" resultMap="TkUsersResult">
        <include refid="selectTkUsersVo"/>
        where uid = #{uid}
    </select>
    <select id="selectSubordinates" resultType="com.tiktok.task.domain.TkUsers">
            SELECT * FROM tk_users WHERE referrer_id = #{userId}
    </select>

    <insert id="insertTkUsers" parameterType="TkUsers" useGeneratedKeys="true" keyProperty="uid">
        insert into tk_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="nickname != null">nickname,</if>
            <if test="svipLevel != null">svip_level,</if>
            <if test="totareward != null">totareward,</if>
            <if test="avatar != null">avatar,</if>
            <if test="balance != null">balance,</if>
            <if test="nonWithdrawableBalance != null">non_withdrawable_balance,</if>
            <if test="usdtAddress != null">usdt_address,</if>
            <if test="registrationTime != null">registration_time,</if>
            <if test="referrerId != null">referrer_id,</if>
            <if test="invitationCode != null">invitation_code,</if>
            <if test="userStatus != null">user_status,</if>
            <if test="withdraw != null">withdraw,</if>
            <if test="blockchainName != null">blockchain_name,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="svipLevel != null">#{svipLevel},</if>
            <if test="totareward != null">#{totareward},</if>
            <if test="avatar != null">#{avatar},</if>
            <if test="balance != null">#{balance},</if>
            <if test="nonWithdrawableBalance != null">#{nonWithdrawableBalance},</if>
            <if test="usdtAddress != null">#{usdtAddress},</if>
            <if test="registrationTime != null">#{registrationTime},</if>
            <if test="referrerId != null">#{referrerId},</if>
            <if test="invitationCode != null"> #{invitationCode},</if>
            <if test="withdraw != null">#{withdraw},</if>
            <if test="blockchainName != null">#{blockchainName},</if>
            <if test="userStatus != null">#{userStatus},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>


    <update id="updateTkUsers" parameterType="TkUsers">
        update tk_users
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="svipLevel != null">svip_level = #{svipLevel},</if>
            <if test="totareward != null">totareward = #{totareward},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="nonWithdrawableBalance != null">non_withdrawable_balance = #{nonWithdrawableBalance},</if>
            <if test="usdtAddress != null">usdt_address = #{usdtAddress},</if>
            <if test="registrationTime != null">registration_time = #{registrationTime},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="referrerId != null">referrer_id = #{referrerId},</if>
            <if test="invitationCode != null">invitation_code = #{invitationCode},</if>
            <if test="withdraw != null">withdraw = #{withdraw},</if>
            <if test="paymentPassword != null">payment_password = #{paymentPassword},</if>
            <if test="blockchainName != null">blockchain_name = #{blockchainName},</if>
            <if test="userStatus != null">user_status = #{userStatus},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="frozenIvestmentAmount != null">frozen_investment_amount = #{frozenIvestmentAmount},</if>
            <if test="investmentAmount != null">investment_amount = #{investmentAmount},</if>
        </trim>
        where uid = #{uid}
    </update>

    <delete id="deleteTkUsersByUid" parameterType="Long">
        delete from tk_users where uid = #{uid}
    </delete>


    <update id="deleteTkUsersByUids" parameterType="String">
        update tk_users set deleted = 1 where uid in
        <foreach item="uid" collection="array" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </update>

</mapper>